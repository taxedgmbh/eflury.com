---
import { type Language, useTranslations, routes } from '../i18n/utils';
import DarkModeToggle from './DarkModeToggle.astro';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslations(lang);
const currentRoutes = routes[lang];
---

<nav class="navbar" id="navbar">
  <div class="nav-container">
    <a href={currentRoutes.home} class="logo">Emanuel Flury</a>

    <div class="nav-content">
      <ul class="nav-links" id="navLinks">
        <li><a href={currentRoutes.home}>{t('nav.home')}</a></li>
        <li><a href={currentRoutes.about}>{t('nav.about')}</a></li>
        <li><a href={currentRoutes.services}>{t('nav.services')}</a></li>
        <li><a href={currentRoutes.portfolio}>{t('nav.portfolio')}</a></li>
        <li><a href={currentRoutes.contact}>{t('nav.contact')}</a></li>
      </ul>

      <div class="nav-actions">
        <DarkModeToggle />

        <!-- Language Selector -->
        <div class="language-selector">
          <button class="language-current" id="langToggle" aria-label="Language Selector">
            <img src={`/images/icons/${lang}.png`} alt={lang === 'en' ? 'English' : 'Deutsch'} class="flag-icon" />
            <span>{lang.toUpperCase()}</span>
            <i class="fas fa-chevron-down"></i>
          </button>
          <div class="language-dropdown" id="langDropdown">
            <a href="/en" class="language-option">
              <img src="/images/icons/en.png" alt="English" class="flag-icon" />
              <span>English</span>
            </a>
            <a href="/de" class="language-option">
              <img src="/images/icons/de.png" alt="Deutsch" class="flag-icon" />
              <span>Deutsch</span>
            </a>
          </div>
        </div>
      </div>

      <!-- Mobile Menu Toggle -->
      <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Toggle Menu">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
  </div>
</nav>

<style>
  /* Navbar Styles */
  .navbar {
    position: fixed;
    top: 0;
    width: 100%;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    z-index: 1000;
    padding: 1rem 0;
    transition: var(--transition-smooth);
    box-shadow: 0 8px 32px rgba(0, 122, 77, 0.1);
  }

  .navbar.scrolled {
    background: var(--nav-bg);
    backdrop-filter: blur(25px);
    box-shadow: 0 8px 32px rgba(0, 122, 77, 0.2);
  }

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-green);
    text-decoration: none;
    transition: var(--transition-smooth);
  }

  .logo:hover {
    color: var(--primary-red);
  }

  .nav-content {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .nav-links {
    display: flex;
    list-style: none;
    gap: 2rem;
    margin: 0;
    padding: 0;
  }

  .nav-links a {
    color: var(--text-primary);
    text-decoration: none;
    font-weight: 500;
    transition: var(--transition-smooth);
    position: relative;
  }

  .nav-links a::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--gradient-primary);
    transition: width 0.3s ease;
  }

  .nav-links a:hover::after {
    width: 100%;
  }

  .nav-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  /* Language Selector */
  .language-selector {
    position: relative;
  }

  .language-current {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: var(--card-bg);
    border: 1px solid rgba(0, 122, 77, 0.2);
    border-radius: 8px;
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: var(--transition-smooth);
    font-weight: 500;
    color: var(--text-primary);
  }

  .language-current:hover {
    border-color: var(--primary-green);
    box-shadow: var(--shadow-soft);
  }

  .flag-icon {
    width: 20px;
    height: 15px;
    object-fit: cover;
    border-radius: 2px;
  }

  .language-dropdown {
    position: absolute;
    top: calc(100% + 0.5rem);
    right: 0;
    background: var(--card-bg);
    border: 1px solid rgba(0, 122, 77, 0.2);
    border-radius: 8px;
    box-shadow: var(--shadow-medium);
    min-width: 150px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    z-index: 100;
  }

  .language-dropdown.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .language-option {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    color: var(--text-primary);
    text-decoration: none;
    transition: var(--transition-smooth);
  }

  .language-option:hover {
    background: rgba(0, 122, 77, 0.1);
  }

  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .mobile-menu-toggle span {
    width: 25px;
    height: 3px;
    background: var(--text-primary);
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  /* Mobile Styles */
  @media (max-width: 768px) {
    .nav-links {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      flex-direction: column;
      background: var(--nav-bg);
      padding: 1rem;
      gap: 1rem;
      box-shadow: var(--shadow-medium);
      display: none;
    }

    .nav-links.active {
      display: flex;
    }

    .mobile-menu-toggle {
      display: flex;
    }

    .mobile-menu-toggle.active span:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }

    .mobile-menu-toggle.active span:nth-child(2) {
      opacity: 0;
    }

    .mobile-menu-toggle.active span:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -6px);
    }

    .nav-content {
      width: 100%;
      position: relative;
    }
  }
</style>

<script>
  // Navbar scroll effect
  const navbar = document.getElementById('navbar');
  let lastScroll = 0;

  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;

    if (currentScroll > 100) {
      navbar?.classList.add('scrolled');
    } else {
      navbar?.classList.remove('scrolled');
    }

    lastScroll = currentScroll;
  });

  // Language selector toggle
  const langToggle = document.getElementById('langToggle');
  const langDropdown = document.getElementById('langDropdown');

  langToggle?.addEventListener('click', () => {
    langDropdown?.classList.toggle('active');
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!langToggle?.contains(e.target as Node)) {
      langDropdown?.classList.remove('active');
    }
  });

  // Mobile menu toggle
  const mobileMenuToggle = document.getElementById('mobileMenuToggle');
  const navLinks = document.getElementById('navLinks');

  mobileMenuToggle?.addEventListener('click', () => {
    navLinks?.classList.toggle('active');
    mobileMenuToggle?.classList.toggle('active');
  });

  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const href = this.getAttribute('href');
      if (href && href !== '#') {
        const target = document.querySelector(href);
        target?.scrollIntoView({ behavior: 'smooth' });

        // Close mobile menu after click
        navLinks?.classList.remove('active');
        mobileMenuToggle?.classList.remove('active');
      }
    });
  });
</script>
