---
import { type Language, useTranslations, routes } from '../i18n/utils';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslations(lang);
const currentRoutes = routes[lang];
---

<section class="hero" id="home">
  <!-- Three.js Background Container -->
  <div id="three-container" class="three-container"></div>

  <div class="hero-content">
    <div class="hero-text">
      <p class="hero-greeting">{t('hero.greeting')}</p>
      <h1 class="hero-title">{t('hero.title')}</h1>
      <p class="hero-subtitle">{t('hero.subtitle')}</p>

      <div class="hero-cta">
        <a href={currentRoutes.services} class="btn btn-primary" onclick="window.trackEvent?.('Conversion', 'cta_click', 'Hero - Explore Services')">
          {t('hero.cta_primary')}
          <i class="fas fa-arrow-right"></i>
        </a>
        <a href={currentRoutes.portfolio} class="btn btn-secondary" onclick="window.trackEvent?.('Conversion', 'cta_click', 'Hero - View Portfolio')">
          {t('hero.cta_secondary')}
          <i class="fas fa-briefcase"></i>
        </a>
      </div>
    </div>

    <!-- Scroll Hint -->
    <div class="scroll-hint">
      <span>{t('hero.scroll_hint')}</span>
      <i class="fas fa-chevron-down"></i>
    </div>
  </div>
</section>

<style>
  .hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    padding: 6rem 2rem 2rem;
  }

  .three-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .hero-content {
    position: relative;
    z-index: 1;
    max-width: 1200px;
    width: 100%;
  }

  .hero-text {
    max-width: 800px;
  }

  .hero-greeting {
    font-size: 1.2rem;
    color: var(--primary-green);
    font-weight: 600;
    margin-bottom: 1rem;
    opacity: 0;
    animation: fadeInUp 0.6s ease forwards;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 800;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    line-height: 1.2;
    opacity: 0;
    animation: fadeInUp 0.6s ease 0.2s forwards;
  }

  .hero-subtitle {
    font-size: clamp(1.1rem, 2vw, 1.3rem);
    color: var(--text-secondary);
    margin-bottom: 2.5rem;
    line-height: 1.6;
    opacity: 0;
    animation: fadeInUp 0.6s ease 0.4s forwards;
  }

  .hero-cta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    opacity: 0;
    animation: fadeInUp 0.6s ease 0.6s forwards;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: var(--transition-smooth);
    cursor: pointer;
    border: none;
    font-size: 1rem;
  }

  .btn-primary {
    background: var(--gradient-primary);
    color: white;
    box-shadow: var(--shadow-soft);
  }

  .btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-medium);
  }

  .btn-secondary {
    background: transparent;
    color: var(--primary-green);
    border: 2px solid var(--primary-green);
  }

  .btn-secondary:hover {
    background: var(--primary-green);
    color: white;
    transform: translateY(-3px);
  }

  .scroll-hint {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-size: 0.9rem;
    opacity: 0.7;
    animation: pulse 2s ease-in-out infinite;
  }

  .scroll-hint i {
    font-size: 1.2rem;
  }

  @media (max-width: 768px) {
    .hero {
      padding: 5rem 1rem 2rem;
    }

    .hero-cta {
      flex-direction: column;
    }

    .btn {
      width: 100%;
      justify-content: center;
    }

    .scroll-hint {
      bottom: 1rem;
    }
  }
</style>

<script>
  import { initThreeBackground } from '../scripts/three-background';

  // Initialize Three.js background
  const cleanup = initThreeBackground('three-container');

  // Store cleanup function for page navigation
  if (cleanup) {
    (window as any).__threeCleanup = cleanup;
  }
</script>
